name: Process latest sentry-cocoa release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # This schedule is set to run every day at midnight. Modify as necessary.

jobs:
  check_for_updates:
    name: "Call the update-package workflow"
    uses: ./.github/workflows/check-for-update.yml
    with:
      source-repo: 'getsentry/sentry-cocoa'

  build:
    needs: check_for_updates
    if: needs.check_for_updates.outputs.needs-update == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Download and process Sentry.xcframework.zip
        id: process_framework
        run: |
          curl -sLJO https://github.com/getsentry/sentry-cocoa/releases/download/${{ needs.check_for_updates.outputs.latest-version  }}/Sentry.xcframework.zip
          unzip Sentry.xcframework.zip -d extracted
          rm Sentry.xcframework.zip
          mv extracted/Carthage/Build/Sentry.xcframework ./
          rm -rf extracted
          zip --symlinks -r Sentry.xcframework.zip Sentry.xcframework

          SHA256_HASH=$(shasum -a 256 Sentry.xcframework.zip | cut -f 1 -d ' ')
          echo "SHA256_HASH=${SHA256_HASH}" >> $GITHUB_OUTPUT

      - name: Update Package.swift
        run: |
          sed -i.bak "s|let sentryVersion = \".*\"|let sentryVersion = \"${{ needs.check_for_updates.outputs.latest-version }}\"|g" Package.swift
          sed -i.bak "s|let sentryChecksum = \".*\"|let sentryChecksum = \"${{ steps.process_framework.outputs.SHA256_HASH }}\"|g" Package.swift
          rm Package.swift.bak
    
      - name: Commit and push changes
        run: |
          git config --local user.email github-actions@github.com
          git config --local user.name github-actions
          git add Package.swift
          git commit -m "Update Package.swift for release ${{ needs.check_for_updates.outputs.latest-version }}"
          git push
          git tag ${{ needs.check_for_updates.outputs.latest-version  }}
          git push --tags
  
      - name: Create new release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ needs.check_for_updates.outputs.latest-version }}"
          release_name: "${{ needs.check_for_updates.outputs.latest-version }}"
          draft: false
          prerelease: false

      - name: Upload Release Assets
        run: |
          for file in Sentry.xcframework.zip
          do
            curl \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: $(file -b --mime-type $file)" \
              --data-binary @"$file" \
              "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$file"
          done
